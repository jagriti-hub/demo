---
AWSTemplateFormatVersion: 2010-09-09
Description:  This template deploys a VPC, with a pair of public and private subnets spread
  across two Availability Zones. It deploys an internet gateway, with a public route for the 
  public subnets. And private route for the private subnets. 

Metadata:
  Architecture:
    - Title: VPC
      Image: image1
      Description: Architecture for VPC with Public and Private Subnets.

Parameters:
  UserEnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

  VpcCIDR:
    Description: Specify an IPv4 CIDR block for the VPC. The smallest CIDR block you can specify is /28, and the largest is /16. 
    Type: String

  PublicSubnet1CIDR:
    Description: Specify a CIDR block for the public subnet in the first Availability Zone, which is a subset of the VPC CIDR.
    Type: String

  PublicSubnet2CIDR:
    Description: Specify a CIDR block for the public subnet in the second Availability Zone, which is a subset of the VPC CIDR.
    Type: String

  PrivateSubnet1CIDR:
    Description: Specify a CIDR block for the private subnet in the first Availability Zone, which is a subset of the VPC CIDR.
    Type: String

  PrivateSubnet2CIDR:
    Description: Specify a CIDR block for the private subnet in the second Availability Zone, which is a subset of the VPC CIDR.
    Type: String
  
  InternetGatewayRoute:
    Description: Destination CIDR for public route.
    Type: String
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Metadata:
      Description: A VPC resource will be deployed.
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref UserEnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Metadata:
      Description: An Internet Gateway resource which will enable access to the internet for your VPC.
    Properties:
      Tags:
        - Key: Name
          Value: !Ref UserEnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Metadata:
      Description: Internet Gateway attachement to your VPC.
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Metadata:
      Description: A subnet in 1st Availability zone which we will route to IGW for making it public.
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Metadata:
      Description: A subnet in 2nd Availability zone which we will route to IGW for making it public.
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Public Subnet (AZ2)

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Metadata:
      Description: A subnet in 1st Availability zone which will be routed to private route.
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Private Subnet (AZ1)

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Metadata:
      Description: A subnet in 2nd Availability zone which will be routed to private route.
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Private Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Metadata:
      Description: Route table for public subnets.
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Public Routes.

  PublicRoute:
    Type: AWS::EC2::Route
    Metadata:
      Description: Route for public subntes where it's traffic is directed.
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 
        Ref: InternetGatewayRoute
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Metadata:
      Description: Route table attachement in public subnet of 1st Availability zone. 
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Metadata:
      Description: Route table attachement in public subnet of 2nd Availability zone. 
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Metadata:
      Description: Route table for private subnets.
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${UserEnvironmentName} Private Routes
          
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Metadata:
      Description: Route table attachement in private subnet of 1st Availability zone. 
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId: 
        Ref: PrivateSubnet1
  
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Metadata:
      Description: Rote table attachement in private subnet of 2nd Availability zone. 
    Properties:
      RouteTableId: 
        Ref: PrivateRouteTable
      SubnetId: 
        Ref: PrivateSubnet2

Outputs:
  VPCID:
    Description: Vpc Id of the craeted VPC.
    Value: !Ref VPC
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCID
  
  VPCCIDR:
    Description: A reference to VPC CIDR.
    Value: !GetAtt VPC.CidrBlock

  PublicSubnets:
    Description: A list of the public subnets.
    Value:
      Fn::Join: 
        - ","
        -
          - Ref: PublicSubnet1 
          - Ref: PublicSubnet2

  PrivateSubnets:
    Description: A list of the private subnets.
    Value:
      Fn::Join: 
        - ","
        -
          - Ref: PrivateSubnet1 
          - Ref: PrivateSubnet2 
                         


  PublicSubnet1ID:
    Description: Subnet Id of the public subnet in the 1st Availability Zone.
    Value:
      Ref: PublicSubnet1

  PublicSubnet2ID:
    Description: Subnet Id of the public subnet in the 2nd Availability Zone.
    Value:
      Ref: PublicSubnet2

  PrivateSubnet1ID:
    Description: Subnet Id of the private subnet in the 1st Availability Zone.
    Value:
      Ref: PrivateSubnet1
    

  PrivateSubnet2ID:
    Description: Subnet Id of the private subnet in the 2nd Availability Zone.
    Value:
      Ref: PrivateSubnet2
  
  PublicRouteTableId:
    Description: Route Table Id of public subnets.
    Value:
      Ref: PublicRouteTable
  
  PrivateRouteTableId:
    Description: Route Table Id of private subnets.
    Value:
      Ref: PrivateRouteTable
  
  PublicAvailabilityZone1:
    Description: Availability zone of public subnet1.
    Value: 
      Fn::GetAtt: PublicSubnet1.AvailabilityZone
  
  PublicAvailabilityZone2:
    Description: Availability zone of public subnet2
    Value: 
      Fn::GetAtt: PublicSubnet2.AvailabilityZone
  
  PrivateAvailabilityZone1:
    Description: Availability zone of private subnet1
    Value: 
      Fn::GetAtt: PrivateSubnet1.AvailabilityZone
  
  PrivateAvailabilityZone2:
    Description: Availability zone of private subnet2
    Value: 
      Fn::GetAtt: PrivateSubnet2.AvailabilityZone
  
  VPCRegion:
    Description: AWS Region where VPC stack got created.
    Value: 
      Fn::Sub: ${AWS::Region}
  
  StackName:
    Description: Your environment Cloudformation Stack Name.
    Value: 
      Fn::Sub: ${AWS::StackName}
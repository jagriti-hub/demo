---
- name: Task 1 - codebuild-pythonpkg - Install AWS Python
  block:
    - name: Task 1 - codebuild-create-app-packages - Create a app zip packages 
      community.general.archive:
        path: "/tmp/{{apiname}}/"
        dest: "/tmp/{{apiname}}-{{apenvironment.version}}.zip"
        exclude_path:
        - "/tmp/{{apiname}}/.*"
        format: zip
      register: pythonpkg
    - name: Task 2 - codebuild-pushpackages - copy python packages to packagerepo
      amazon.aws.aws_s3:
        bucket: "{{ap.templaterepo}}"
        object: "/packages/{{apiname}}-{{apenvironment.version}}.zip"
        src: "/tmp/{{apiname}}-{{apenvironment.version}}.zip"
        mode: put
      register: pushpackages
    
    - name: Step {{stepno}} - {{stepname}}  - Task 3 - Register the outputs
      set_fact:
        update_output: "false"
        outputs: []
  rescue:
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedtask: "{{ansible_failed_task.name}}"
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedmessage: "{{ansible_failed_result.msg}} -- {{ansible_failed_result.stderr}}"
      register: failedmsg
      when: ansible_failed_result.msg and ansible_failed_result.stderr is defined
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedmessage: "{{ansible_failed_result.msg}}"
      when: failedmsg is skipped
    - name: 
      fail:
        msg:  Step {{stepno}} - {{stepname}}  is failed

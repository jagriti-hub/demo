---
- name: Stage - deployapi stage
  block:
    - name: Task 1 - createimage-stopinstance Stop the sandbox instances
      community.aws.ec2_instance:
        instance_ids: "{{ createinstance.instances[0].instance_id }}"
        region: '{{ apenvironment.region }}'
        state: stopped
        wait: True
        vpc_subnet_id: "{{subnetid}}"
        network:
          assign_public_ip: true
      loop: "{{ createinstance.instances }}"
    - name: Task 2 - createimage-createami Basic AMI Creation
      amazon.aws.ec2_ami:
        instance_id: "{{ item.instance_id }}"
        region: "{{ apenvironment.region }}"
        wait: yes
        name: "{{apiname}}-{{apenvironment.version}}"
        tags:
          Name: "{{apiname}}-{{apenvironment.version}}"
          Service: "{{apiname}}"
      loop: "{{ createinstance.instances }}"
      register: createami
    
    - debug:
        var: createami
    - debug:
        var: createami.results[0].item.image_id
    
    - name: Task 3 register name of ec2ami
      set_fact:
        ec2ami: "{{createami.results[0].image_id}}"
    
    - name: Task 4 - ec2 ami output - Register the outputs
      set_fact:
        update_output: "true"
        outputs:
          - OutputKey: "EC2amiId"
            OutputValue: "{{ec2ami}}"
  rescue:
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedtask: "{{ansible_failed_task.name}}"
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedmessage: "{{ansible_failed_result.msg}} -- {{ansible_failed_result.stderr}}"
      register: failedmsg
      when: ansible_failed_result.msg and ansible_failed_result.stderr is defined
    - name: Step {{stepno}} - {{stepname}} - Faiure Message Registering
      set_fact: 
        failedmessage: "{{ansible_failed_result.msg}}"
      when: failedmsg is skipped
    - name: 
      fail:
        msg:  Step {{stepno}} - {{stepname}}  is failed
      
  #Write output for ami id --> setfact and register stat